{"version":3,"sources":["models/movies.ts","models/index.ts","components/MovieSearchFormCard/MovieSearchFormCard.tsx","components/ResultCard/ResultCard.tsx","components/NominationCard/NominationCard.tsx","components/NominationBanner/NominationBanner.tsx","services/index.ts","views/BasicLayout.tsx","Dashboard.tsx","index.tsx"],"names":["initialState","result","nomination","searchValue","movies","produce","state","action","type","payload","push","filter","movie","Title","rootReducer","combineReducers","MovieSearchFormCard","setSearchValue","search","title","Item","label","value","onChange","e","target","onPressEnter","suffix","SearchOutlined","placeholder","displayName","ResultCard","addNomination","length","getItemDisabledState","item","level","map","style","marginTop","Text","Year","disabled","onClick","marginLeft","NominationCard","removeNomination","NominationBanner","a","axios","method","url","params","apiKey","appConfig","OMDbApiKey","t","BasicLayout","dispatch","useEffect","sessionConfig","window","sessionStorage","getItem","JSON","parse","setItem","stringify","span","searchMovie","then","response","data","Response","message","warning","connect","Dashboard","path","component","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a63a9622.chunk.js","sourcesContent":["import produce from 'immer'\r\nimport {MovieType} from '../views/BasicLayout'\r\n\r\nconst initialState = {\r\n  result: [],\r\n  nomination: [],\r\n  searchValue: null,\r\n}\r\n\r\nconst movies = produce(\r\n  (state, action) => {\r\n    const {type, payload} = action\r\n    switch (type) {\r\n      case 'SET_SEARCH_VALUE':\r\n        state.searchValue = payload\r\n        return state\r\n      case 'ADD_RESULT':\r\n        state.result.push(payload)\r\n        return state\r\n      case 'ADD_NOMINATION':\r\n        state.nomination.push(payload)\r\n        return state\r\n      case 'REMOVE_NOMINATION':\r\n        state.nomination = state.nomination.filter((movie: MovieType) => movie.Title !== payload.Title)\r\n        return state\r\n      case 'SET_MOVIES_STATE':\r\n        state = payload\r\n        return state\r\n      case 'RESET_STATE':\r\n        state = initialState\r\n        return state\r\n      default:\r\n        return state\r\n    }\r\n  },\r\n  {...initialState},\r\n)\r\n\r\nexport default movies\r\n","import {combineReducers} from 'redux'\r\nimport movies from './movies'\r\n\r\nconst rootReducer = combineReducers({movies})\r\n\r\nexport default rootReducer\r\n","import React from 'react'\r\nimport {Card, Form, Input} from 'antd'\r\nimport {SearchOutlined} from '@ant-design/icons'\r\n\r\ntype MovieSearchFormCardPropType = {\r\n  setSearchValue: (value: string) => void,\r\n  search: () => void,\r\n  searchValue: string,\r\n}\r\n\r\nconst MovieSearchFormCard = ({\r\n  setSearchValue,\r\n  search,\r\n  searchValue,\r\n}: MovieSearchFormCardPropType) =>\r\n    (\r\n      <Card title='The Shoppies'>\r\n        <Form.Item label='Movie title'>\r\n          <Input\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n            onPressEnter={() => search()}\r\n            suffix={<SearchOutlined />}\r\n            placeholder='search a movie title' />\r\n        </Form.Item>\r\n      </Card>\r\n    )\r\n\r\nMovieSearchFormCard.displayName = 'MovieSearchFormCard'\r\nexport default MovieSearchFormCard\r\n","import {\r\n  Button, Card, Row, Typography,\r\n  } from 'antd'\r\nimport React from 'react'\r\nimport {MovieType} from '../../views/BasicLayout'\r\n\r\ntype ResultCardPropType = {\r\n  nomination: MovieType[],\r\n  result: MovieType[],\r\n  addNomination: (payload: MovieType) => void,\r\n}\r\n\r\nconst ResultCard = ({\r\n    nomination,\r\n    result,\r\n    addNomination,\r\n}: ResultCardPropType) => {\r\n    if (result.length === 0) return null\r\n\r\n    const getItemDisabledState = (item: MovieType) => {\r\n      if (nomination.length === 0) return false\r\n      if (nomination.length === 5) return true\r\n      const nominationList = nomination.filter((movie: MovieType) => movie.Title === item.Title)\r\n      if (nominationList.length === 0) return false\r\n      return true\r\n    }\r\n\r\n    return <Card>\r\n      <Typography.Title level={4}>Results</Typography.Title>\r\n      {result.map((item: MovieType) => <Row style={{marginTop: 5}}>\r\n        <Typography.Text style={{marginTop: 5}}>\r\n          {`${item.Title} - (${item.Year})`}\r\n        </Typography.Text>\r\n        <Button disabled={getItemDisabledState(item)} onClick={() => addNomination(item)} style={{marginLeft: 10}}>Nominate</Button>\r\n      </Row>)}\r\n    </Card>\r\n}\r\n\r\nResultCard.displayName = 'ResultCard'\r\nexport default ResultCard\r\n","import {\r\n  Button, Card, Row, Typography,\r\n} from 'antd'\r\nimport React from 'react'\r\nimport {MovieType} from '../../views/BasicLayout'\r\n\r\ntype ResultCardPropType = {\r\n  nomination: MovieType[],\r\n  removeNomination: (payload: MovieType) => void,\r\n}\r\n\r\nconst NominationCard = ({\r\n    removeNomination,\r\n    nomination,\r\n}: ResultCardPropType) => {\r\n    if (nomination.length === 0) return null\r\n    return <Card>\r\n      <Typography.Title level={4}>Nominations</Typography.Title>\r\n      {nomination.map((item: MovieType) => <Row style={{marginTop: 5}}>\r\n        <Typography.Text style={{marginTop: 5}}>\r\n          {`${item.Title} - (${item.Year})`}\r\n        </Typography.Text>\r\n        <Button onClick={() => removeNomination(item)} style={{marginLeft: 10}}>Remove</Button>\r\n      </Row>)}\r\n    </Card>\r\n}\r\n\r\nNominationCard.displayName = 'NominationCard'\r\nexport default NominationCard\r\n","import {Card, Typography, Row} from 'antd'\r\nimport React from 'react'\r\nimport {MovieType} from '../../views/BasicLayout'\r\n\r\ntype NominationBannerPropType = {\r\n  nomination: MovieType[]\r\n}\r\n\r\nconst NominationBanner = ({\r\n    nomination,\r\n}: NominationBannerPropType) => <Card>\r\n  <Typography.Title level={4}>Your movie nominations :)</Typography.Title>\r\n  {nomination.map((item: MovieType) => <Row style={{marginTop: 5}}>\r\n    <Typography.Text style={{marginTop: 5}}>\r\n      {`- ${item.Title} - (${item.Year})`}\r\n    </Typography.Text>\r\n  </Row>)}\r\n</Card>\r\n\r\nNominationBanner.displayName = 'NominationBanner'\r\nexport default NominationBanner\r\n","import axios from 'axios'\r\nimport appConfig from '../appConfig.json'\r\n\r\nexport async function searchMovie(payload: string) {\r\n    return axios({\r\n        method: 'GET',\r\n        url: 'https://www.omdbapi.com/',\r\n        params: {\r\n            apiKey: appConfig.OMDbApiKey,\r\n            t: payload,\r\n        },\r\n    })\r\n}\r\n","import {Col, message, Row} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport React, {useEffect} from 'react'\r\nimport {\r\n  MovieSearchFormCard, NominationBanner, NominationCard, ResultCard,\r\n} from '../components'\r\nimport {searchMovie} from '../services'\r\n\r\nexport type MovieType = {\r\n  Title: string,\r\n  Year: string,\r\n}\r\n\r\ntype MovieStateType = {\r\n  result: MovieType[],\r\n  nomination: MovieType[],\r\n  searchValue: string,\r\n}\r\n\r\ntype StoreStateType = {\r\n  movies: MovieStateType\r\n}\r\n\r\ntype DispatchArgType = {\r\n  type: string,\r\n  payload?: any,\r\n}\r\n\r\ntype BasicLayoutPropType = {\r\n  dispatch: (arg: DispatchArgType) => void,\r\n  movies: MovieStateType,\r\n}\r\n\r\nconst BasicLayout = ({dispatch, movies}: BasicLayoutPropType) => {\r\n    useEffect(() => {\r\n      const sessionConfig = window.sessionStorage.getItem('movies')\r\n      if (sessionConfig) {\r\n        dispatch({\r\n          type: 'SET_MOVIES_STATE',\r\n          payload: JSON.parse(sessionConfig),\r\n        })\r\n      } else {\r\n        dispatch({type: 'RESET_STATE'})\r\n      }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      window.sessionStorage.setItem('movies', JSON.stringify(movies))\r\n    }, [movies])\r\n\r\n    const {result, nomination, searchValue} = movies\r\n    const addNomination = (movie: MovieType) => {\r\n        dispatch({type: 'ADD_NOMINATION', payload: movie})\r\n    }\r\n    const removeNomination = (movie: MovieType) => {\r\n        dispatch({type: 'REMOVE_NOMINATION', payload: movie})\r\n    }\r\n\r\n    const search = () => {\r\n      searchMovie(searchValue).then((response: any) => {\r\n        const {data} = response\r\n        if (data.Response === 'True') {\r\n          const payload = {\r\n            Title: data.Title,\r\n            Year: data.Year,\r\n          }\r\n          const sameResult = result.filter((item: MovieType) => item.Title === data.Title)\r\n          if (sameResult.length === 0) {\r\n            dispatch({type: 'ADD_RESULT', payload})\r\n          }\r\n        }\r\n        if (data.Response === 'False') {\r\n          message.warning('Movie not found.')\r\n        }\r\n      })\r\n    }\r\n\r\n    const setSearchValue = (value: string) => {\r\n      dispatch({type: 'SET_SEARCH_VALUE', payload: value})\r\n    }\r\n\r\n    return (<Row>\r\n      <Col span={6} />\r\n      <Col span={12} style={{marginTop: '10%'}}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <MovieSearchFormCard setSearchValue={setSearchValue} search={search} searchValue={searchValue} />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{marginTop: 10}}>\r\n          <Col span={11}>\r\n            <ResultCard nomination={nomination} result={result} addNomination={addNomination} />\r\n          </Col>\r\n          <Col span={2} />\r\n          <Col span={11}>\r\n            <NominationCard removeNomination={removeNomination} nomination={nomination} />\r\n          </Col>\r\n        </Row>\r\n        {nomination.length === 5 && <Row style={{marginTop: 10}}>\r\n          <Col span={24}>\r\n            <NominationBanner nomination={nomination} />\r\n          </Col>\r\n          </Row>}\r\n      </Col>\r\n      <Col span={6} />\r\n    </Row>)\r\n}\r\n\r\nconst mapStateToProps = (state: StoreStateType) => ({\r\n    movies: state.movies,\r\n})\r\n\r\nBasicLayout.displayName = 'BasicLayout'\r\nexport default connect(mapStateToProps)(BasicLayout)\r\n","import {BrowserRouter, Route} from 'react-router-dom'\r\nimport React from 'react'\r\nimport {BasicLayout} from './views'\r\n\r\nconst Dashboard = () => (\r\n  <BrowserRouter>\r\n    <Route path='*' component={BasicLayout} />\r\n  </BrowserRouter>\r\n)\r\n\r\nDashboard.displayName = 'Dashboard'\r\nexport default Dashboard\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './models'\nimport Dashboard from './Dashboard'\nimport './index.css'\n\nconst store = createStore(\n  rootReducer,\n  // @ts-ignore\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n)\n\nconst App = () => (\n  <Provider store={store}>\n    <Dashboard />\n  </Provider>\n)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}